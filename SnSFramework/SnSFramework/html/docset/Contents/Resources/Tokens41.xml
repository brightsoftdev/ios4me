<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/SnSTableViewController.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/SnSTableViewController</TokenIdentifier>
			<Abstract>An UITableViewController which follows the SnSViewControllerLifeCycle life-cycle, and which is also able to
aggregate other SnSViewControllerLifeCycle entities.</Abstract>
			<DeclaredIn>SnSTableViewController.h</DeclaredIn>
			
			<NodeRef refid="41"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/SnSTableViewController/context</TokenIdentifier>
			<Abstract></Abstract>
			<DeclaredIn>SnSTableViewController.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, retain, readonly) SnSWorkItem *context</Declaration>
			
			
			<Anchor>//api/name/context</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/SnSTableViewController/responderRedirector</TokenIdentifier>
			<Abstract></Abstract>
			<DeclaredIn>SnSTableViewController.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, retain, readonly) SnSResponserRedirector *responderRedirector</Declaration>
			
			
			<Anchor>//api/name/responderRedirector</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SnSTableViewController/tableViewCustom:didSelectRowAtIndexPath:</TokenIdentifier>
			<Abstract>The method which is actually called and wrapped when the end-user clicks on a table row.</Abstract>
			<DeclaredIn>SnSTableViewController.h</DeclaredIn>			
			
			<Declaration>- (void)tableViewCustom:(UITableView *)aTableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath</Declaration>
			
			
			<Anchor>//api/name/tableViewCustom:didSelectRowAtIndexPath:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SnSTableViewController/tableViewCustom:willDisplayCell:forRowAtIndexPath:</TokenIdentifier>
			<Abstract>The method which is called to override the display style of a table row.</Abstract>
			<DeclaredIn>SnSTableViewController.h</DeclaredIn>			
			
			<Declaration>- (void)tableViewCustom:(UITableView *)aTableView willDisplayCell:(UITableViewCell *)cell forRowAtIndexPath:(NSIndexPath *)indexPath</Declaration>
			
			
			<Anchor>//api/name/tableViewCustom:willDisplayCell:forRowAtIndexPath:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SnSTableViewController/waitForSynchronizedDisplayObjects</TokenIdentifier>
			<Abstract>That method will hang the calling thread until the UIViewController::viewDidAppear: has been entered.</Abstract>
			<DeclaredIn>SnSTableViewController.h</DeclaredIn>			
			
			<Declaration>- (void)waitForSynchronizedDisplayObjects</Declaration>
			
			
			<Anchor>//api/name/waitForSynchronizedDisplayObjects</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SnSTableViewController/synchronizeDisplayObjects</TokenIdentifier>
			<Abstract>Use that method in order to synchronize the display.</Abstract>
			<DeclaredIn>SnSTableViewController.h</DeclaredIn>			
			
			<Declaration>- (void)synchronizeDisplayObjects</Declaration>
			
			
			<Anchor>//api/name/synchronizeDisplayObjects</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SnSTableViewController/retrieveBusinessObjectsAndSynchronize</TokenIdentifier>
			<Abstract>Use that method in order to reload the data and synchronize the display accordingly.</Abstract>
			<DeclaredIn>SnSTableViewController.h</DeclaredIn>			
			
			<Declaration>- (void)retrieveBusinessObjectsAndSynchronize</Declaration>
			
			
			<Anchor>//api/name/retrieveBusinessObjectsAndSynchronize</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SnSTableViewController/init</TokenIdentifier>
			<Abstract></Abstract>
			<DeclaredIn>SnSTableViewController.m</DeclaredIn>			
			
			<Declaration>- (id)init</Declaration>
			
			
			<Anchor>//api/name/init</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SnSTableViewController/initWithStyle:</TokenIdentifier>
			<Abstract></Abstract>
			<DeclaredIn>SnSTableViewController.m</DeclaredIn>			
			
			<Declaration>- (id)initWithStyle:(UITableViewStyle)style</Declaration>
			
			
			<Anchor>//api/name/initWithStyle:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SnSTableViewController/dealloc</TokenIdentifier>
			<Abstract></Abstract>
			<DeclaredIn>SnSTableViewController.m</DeclaredIn>			
			
			<Declaration>- (void)dealloc</Declaration>
			
			
			<Anchor>//api/name/dealloc</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SnSTableViewController/onRetrieveAggregates</TokenIdentifier>
			<Abstract>an array of SnSViewControllerLifeCycle objects, which indicates the entities that are handled by the current object</Abstract>
			<DeclaredIn>SnSTableViewController.m</DeclaredIn>			
			
			<Declaration>- (NSArray *)onRetrieveAggregates</Declaration>
			
			<ReturnValue><Abstract>an array of SnSViewControllerLifeCycle objects, which indicates the entities that are handled by the current object</Abstract></ReturnValue>
			<Anchor>//api/name/onRetrieveAggregates</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SnSTableViewController/onRetrieveDisplayObjects:</TokenIdentifier>
			<Abstract>Responsible for computing the GUI objects associated to the current entity, and for adding
it to the parent view.</Abstract>
			<DeclaredIn>SnSTableViewController.m</DeclaredIn>			
			
			<Declaration>- (void)onRetrieveDisplayObjects:(UIView *)view</Declaration>
			<Parameters>
				<Parameter>
					<Name>view</Name>
					<Abstract>the parent view the current entity should be represented on</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/onRetrieveDisplayObjects:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SnSTableViewController/onRetrieveBusinessObjects</TokenIdentifier>
			<Abstract>In charge of retrieving the business objects that represent in memory the entity.</Abstract>
			<DeclaredIn>SnSTableViewController.m</DeclaredIn>			
			
			<Declaration>- (void)onRetrieveBusinessObjects</Declaration>
			
			
			<Anchor>//api/name/onRetrieveBusinessObjects</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SnSTableViewController/onFulfillDisplayObjects</TokenIdentifier>
			<Abstract>In charge of binding the business objects with their GUI representation.</Abstract>
			<DeclaredIn>SnSTableViewController.m</DeclaredIn>			
			
			<Declaration>- (void)onFulfillDisplayObjects</Declaration>
			
			
			<Anchor>//api/name/onFulfillDisplayObjects</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SnSTableViewController/onSynchronizeDisplayObjects</TokenIdentifier>
			<Abstract>In charge of binding the business objects with their GUI representation.</Abstract>
			<DeclaredIn>SnSTableViewController.m</DeclaredIn>			
			
			<Declaration>- (void)onSynchronizeDisplayObjects</Declaration>
			
			
			<Anchor>//api/name/onSynchronizeDisplayObjects</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SnSTableViewController/onDiscarded</TokenIdentifier>
			<Abstract>In charge of cleaning up the memory associated with the business objects and the GUI elements.</Abstract>
			<DeclaredIn>SnSTableViewController.m</DeclaredIn>			
			
			<Declaration>- (void)onDiscarded</Declaration>
			
			
			<Anchor>//api/name/onDiscarded</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SnSTableViewController/synchronizeDisplay:withBusinessObject:</TokenIdentifier>
			<Abstract></Abstract>
			<DeclaredIn>SnSTableViewController.m</DeclaredIn>			
			
			<Declaration>- (void)synchronizeDisplay:(UITableViewCell *)cell withBusinessObject:(id)businessObject</Declaration>
			
			
			<Anchor>//api/name/synchronizeDisplay:withBusinessObject:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SnSTableViewController/loadView</TokenIdentifier>
			<Abstract></Abstract>
			<DeclaredIn>SnSTableViewController.m</DeclaredIn>			
			
			<Declaration>- (void)loadView</Declaration>
			
			
			<Anchor>//api/name/loadView</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SnSTableViewController/viewDidLoad</TokenIdentifier>
			<Abstract></Abstract>
			<DeclaredIn>SnSTableViewController.m</DeclaredIn>			
			
			<Declaration>- (void)viewDidLoad</Declaration>
			
			
			<Anchor>//api/name/viewDidLoad</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SnSTableViewController/viewDidUnload</TokenIdentifier>
			<Abstract></Abstract>
			<DeclaredIn>SnSTableViewController.m</DeclaredIn>			
			
			<Declaration>- (void)viewDidUnload</Declaration>
			
			
			<Anchor>//api/name/viewDidUnload</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SnSTableViewController/viewWillAppear:</TokenIdentifier>
			<Abstract></Abstract>
			<DeclaredIn>SnSTableViewController.m</DeclaredIn>			
			
			<Declaration>- (void)viewWillAppear:(BOOL)animated</Declaration>
			
			
			<Anchor>//api/name/viewWillAppear:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SnSTableViewController/viewDidAppear:</TokenIdentifier>
			<Abstract></Abstract>
			<DeclaredIn>SnSTableViewController.m</DeclaredIn>			
			
			<Declaration>- (void)viewDidAppear:(BOOL)animated</Declaration>
			
			
			<Anchor>//api/name/viewDidAppear:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SnSTableViewController/viewWillDisappear:</TokenIdentifier>
			<Abstract></Abstract>
			<DeclaredIn>SnSTableViewController.m</DeclaredIn>			
			
			<Declaration>- (void)viewWillDisappear:(BOOL)animated</Declaration>
			
			
			<Anchor>//api/name/viewWillDisappear:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SnSTableViewController/viewDidDisappear:</TokenIdentifier>
			<Abstract></Abstract>
			<DeclaredIn>SnSTableViewController.m</DeclaredIn>			
			
			<Declaration>- (void)viewDidDisappear:(BOOL)animated</Declaration>
			
			
			<Anchor>//api/name/viewDidDisappear:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SnSTableViewController/didReceiveMemoryWarning</TokenIdentifier>
			<Abstract></Abstract>
			<DeclaredIn>SnSTableViewController.m</DeclaredIn>			
			
			<Declaration>- (void)didReceiveMemoryWarning</Declaration>
			
			
			<Anchor>//api/name/didReceiveMemoryWarning</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SnSTableViewController/numberOfSectionsInTableView:</TokenIdentifier>
			<Abstract></Abstract>
			<DeclaredIn>SnSTableViewController.m</DeclaredIn>			
			
			<Declaration>- (NSInteger)numberOfSectionsInTableView:(UITableView *)aTableView</Declaration>
			
			
			<Anchor>//api/name/numberOfSectionsInTableView:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SnSTableViewController/tableView:numberOfRowsInSection:</TokenIdentifier>
			<Abstract></Abstract>
			<DeclaredIn>SnSTableViewController.m</DeclaredIn>			
			
			<Declaration>- (NSInteger)tableView:(UITableView *)aTableView numberOfRowsInSection:(NSInteger)section</Declaration>
			
			
			<Anchor>//api/name/tableView:numberOfRowsInSection:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SnSTableViewController/tableView:cellForRowAtIndexPath:</TokenIdentifier>
			<Abstract></Abstract>
			<DeclaredIn>SnSTableViewController.m</DeclaredIn>			
			
			<Declaration>- (UITableViewCell *)tableView:(UITableView *)aTableView cellForRowAtIndexPath:(NSIndexPath *)indexPath</Declaration>
			
			
			<Anchor>//api/name/tableView:cellForRowAtIndexPath:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SnSTableViewController/tableView:didSelectRowAtIndexPath:</TokenIdentifier>
			<Abstract></Abstract>
			<DeclaredIn>SnSTableViewController.m</DeclaredIn>			
			
			<Declaration>- (void)tableView:(UITableView *)aTableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath</Declaration>
			
			
			<Anchor>//api/name/tableView:didSelectRowAtIndexPath:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SnSTableViewController/tableView:willDisplayCell:forRowAtIndexPath:</TokenIdentifier>
			<Abstract></Abstract>
			<DeclaredIn>SnSTableViewController.m</DeclaredIn>			
			
			<Declaration>- (void)tableView:(UITableView *)aTableView willDisplayCell:(UITableViewCell *)cell forRowAtIndexPath:(NSIndexPath *)indexPath</Declaration>
			
			
			<Anchor>//api/name/tableView:willDisplayCell:forRowAtIndexPath:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/SnSTableViewController/businessObjects</TokenIdentifier>
			<Abstract></Abstract>
			<DeclaredIn>SnSTableViewController.m</DeclaredIn>			
			
			<Declaration>@property (nonatomic, retain) id businessObjects</Declaration>
			
			
			<Anchor>//api/name/businessObjects</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/SnSTableViewController/indexObjects</TokenIdentifier>
			<Abstract></Abstract>
			<DeclaredIn>SnSTableViewController.m</DeclaredIn>			
			
			<Declaration>@property (nonatomic, retain) id indexObjects</Declaration>
			
			
			<Anchor>//api/name/indexObjects</Anchor>
		</Token>
		
	</File>
</Tokens>