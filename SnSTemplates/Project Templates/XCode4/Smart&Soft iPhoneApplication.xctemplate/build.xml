<?xml version="1.0" encoding="UTF-8"?>
<!--
 * Copyright (C) 2009 Smart&Soft.
 *
 * The code hereby is the private full property of the Smart&Soft company, Paris, France.
 * 
 * You have no right to re-use or modify it. There are no open-source, nor free licence
 * attached to it!
 -->
 
 <!--
 This Ant script requires the following libraries:
 <ul>
   <li><a href="http://ant-contrib.sourceforge.net">Andt-Contrib</a></li>
 </ul>
 -->
<project
  name="SnSiPhoneTemplate"
  default="init"
  basedir="."
>

  <description>The aim of this Ant buildfile is to propose services for industrializing iPhone projects based on a template.</description>

  <!-- The Ant-Contrib library extends Ant. -->
  <taskdef resource="net/sf/antcontrib/antlib.xml"/>

  <target
    name="init"
    depends=""
    description="Default target, which should always be called first be other targets."
  >
  </target>

  <target
    name="generate"
    depends="init"
    description="Generate a new iPhone project."
  >
    <input
      addproperty="ApplicationName"
      message="Name of the project?"
    />
    <input
      addproperty="ApplicationAuthor"
      message="Author of the project?"
    />
    <!--echo file="test.txt">${ApplicationAuthor}</echo>
    <fixcrlf file="test.txt" encoding="UTF-8" outputencoding="Mac OS"/>
    <fail>ApplicationName=${ApplicationAuthor}</fail-->
    <input
      addproperty="ApplicationCreationDate"
      message="Project creation date?"
    />
    <input
      addproperty="generatedParent.directoryPath"
      message="New project parent directory path?"
      defaultvalue=".."
    />
    <property
      name="generated.directoryPath"
      location="${generatedParent.directoryPath}/${ApplicationName}"
    />
    <copy
      todir="${generated.directoryPath}"
      includeEmptyDirs="true"
    >
      <fileset dir=".">
        <exclude name="build/**"/>
        <exclude name="build.xml"/>
        <exclude name="license-objective-c"/>
      </fileset>
      <filterchain>
        <tokenfilter>
          <replaceregex
            pattern="___PROJECTNAME___"
            replace="${ApplicationName}"
            flags="g"
          />
          <replaceregex
            pattern="___PROJECTNAMEASIDENTIFIER___"
            replace="${ApplicationName}"
            flags="g"
          />
          <replaceregex
            pattern="ApplicationAuthor"
            replace="${ApplicationAuthor}"
            flags="g"
          />
          <replaceregex
            pattern="ApplicationCreationDate"
            replace="${ApplicationCreationDate}"
            flags="g"
          />
        </tokenfilter>
      </filterchain>
      <filtermapper>
        <replacestring
          from="___PROJECTNAME___"
          to="${ApplicationName}"
        />
        <replacestring
          from="___PROJECTNAMEASIDENTIFIER___"
          to="${ApplicationName}"
        />
      </filtermapper>
    </copy>
    <move
      file="${generated.directoryPath}/project-build.xml"
      tofile="${generated.directoryPath}/${ApplicationName}-build.xml"
    />
    <!--antcall target="checkLicense">
      <param
        name="project.directoryPath"
        value="${generated.directoryPath}"
      />
      <param
        name="projectName"
        value="${ApplicationName}"
      />
    </antcall-->
  </target>

  <target
    name="checkLicense"
    depends="init"
    description="Checks the source code text associated with the licenses."
  >
    <askProperty
      property="project.directoryPath"
      message="Project directory path?"
      defaultValue="../NewProject"
    />
    <property
      name="license.filePath"
      location="license-objective-c.txt"
    />
    <askProperty
      property="projectName"
      message="Project name?"
      defaultValue="NewProject"
    />
    <property
      name="companyName"
      value="Smart&amp;Soft"
    />
    <property
      name="copyrightYear"
      value="2009"
    />
    <askProperty
      property="defaultAuthor"
      message="Project author?"
      defaultvalue="Matthias Rouberol"
    />
    <tstamp>
      <format
        property="defaultCreationDate"
        pattern="dd/MM/yyyy"
      />
    </tstamp>
    <loadfile
      srcFile="${license.filePath}"
      property="license"
    />
    <for param="source.filePath">
      <fileset dir="${project.directoryPath}">
        <include name="Classes/**/*.h"/>
        <include name="Classes/**/*.m"/>
        <include name="main.m"/>
      </fileset>
      <sequential>
        <var
          name="sourceCode"
          unset="true"
        />
        <loadfile
          srcFile="@{source.filePath}"
          property="sourceCode"
        />
        <!-- We first extract the author and the creation date --> 
        <propertyregex
          property="author"
          override="yes"
          input="${sourceCode}"
          regexp="Created by (.*) on (.*)."
          select="\1"
          defaultValue="${defaultAuthor}"
        />
        <propertyregex
          property="creationDate"
          override="yes"
          input="${sourceCode}"
          regexp="Created by (.*) on (.*)."
          select="\2"
          defaultValue="${defaultCreationDate}"
        />
        <var
          name="source.fileName"
          unset="true"
        />
        <basename
          property="source.fileName"
          file="@{source.filePath}"
        />
        <propertyregex
          property="body"
          override="yes"
          input="${sourceCode}"
          regexp="(.*[\r\n])*//[\r\n][\r\n](#import(.*[\r\n])*)"
          select="\2"
          global="false"
          defaultValue=""
        />
        <tempfile property="temporary.filePath"/>
        <echo file="${temporary.filePath}"><![CDATA[${license}
//
//  ${source.fileName}
//  ${projectName}
//
//  Created by ${author} on ${creationDate}.
//

${body}]]></echo>
        <var
          name="newSourceCode"
          unset="true"
        />
        <loadfile
          srcFile="${temporary.filePath}"
          property="newSourceCode"
        />
        <if>
          <not>
            <equals
              arg1="${newSourceCode}"
              arg2="${sourceCode}"
            />
          </not>
          <then>
            <echo>Changing the header for the source file '@{source.filePath}' with the author '${author}' and the creation date '${creationDate}'</echo>
            <echo
              file="@{source.filePath}"
              message="${newSourceCode}"
            />
          </then>
        </if>
      </sequential>
    </for>
  </target>

</project>
